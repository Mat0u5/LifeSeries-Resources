name: Resourcepack Zipper

on:
  push:
    branches:
      - main

jobs:
  notify:
    if: ${{ !contains(github.event.head_commit.message, '{skip_discord}') && contains(github.event.head_commit.message, '{skip_release}') }}
    runs-on: ubuntu-latest

    steps:
    - name: Get branch name
      id: get_branch_name
      run: |
        BRANCH_NAME=${GITHUB_REF#refs/heads/}
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
    - name: Prepare and clean commit message
      id: prepare_commit_message
      run: |
        RAW_COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
        
        TAGS=$(echo "$RAW_COMMIT_MESSAGE" | grep -oE '\{[^}]+\}' | tr -d '{}' | awk '{tags = tags $0", "} END {sub(", $", "", tags); print tags}')
        if [ -n "$TAGS" ]; then
          COMMIT_FOOTER="\\n\`Tags: $TAGS\`"
        else
          COMMIT_FOOTER=""
        fi
        
        # Clean the commit message by removing all tags
        COMMIT_MESSAGE=$(echo "$RAW_COMMIT_MESSAGE" | sed -E 's/\{[^}]+\}//g' | sed 's/%0A/\\n/g' | jq -s -Rr @json)
        COMMIT_MESSAGE=${COMMIT_MESSAGE:1:-1}
        
        echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
        echo "COMMIT_FOOTER=$COMMIT_FOOTER" >> $GITHUB_ENV
    - name: Discord Message
      if: ${{ !contains(github.event.head_commit.message, '{skip_discord}') && contains(github.event.head_commit.message, '{skip_release}') }}
      uses: satak/webrequest-action@master
      with:
        url: ${{ secrets.DISCORD_WEBHOOK }}
        method: POST
        payload: '{ "embeds": [{ "title": "[${{ github.repository }}:${{ env.BRANCH_NAME }}] - new commit", "author": {"name": "${{ github.event.head_commit.author.name}}","url": "https://github.com/${{ github.event.head_commit.author.username}}","icon_url": "https://github.com/${{ github.event.head_commit.author.username}}.png"},"description": "`Commit Message:` ```\n${{ env.COMMIT_MESSAGE }}```${{ env.COMMIT_FOOTER }}", "url": "https://github.com/${{ github.repository }}/releases/tag/release-${{ env.BRANCH_NAME }}-${{ github.sha }}", "color": 3384627 }] }'

  build:
    if: ${{ !contains(github.event.head_commit.message, '{skip_build}') }}
    runs-on: ubuntu-latest

    steps:
    - name: Get branch name
      id: get_branch_name
      run: |
        BRANCH_NAME=${GITHUB_REF#refs/heads/}
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
        
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # A non-shallow repository clone is required

    - name: Run PackSquash
      uses: ComunidadAylas/PackSquash-action@v4
      with:
        packsquash_version: latest # Uses the latest PackSquash release supported by the action
        shader_source_transformation_strategy: keep_as_is

    - name: Create ZIP file
      run: |
        COMMIT_ID=$(git rev-parse --short HEAD)
        ZIP_NAME="RP.zip"
        echo "ZIP_NAME=${ZIP_NAME}" >> $GITHUB_ENV
        zip -r "${ZIP_NAME}" . -x *.git* -x server.properties

    - name: Upload ZIP artifact
      if: ${{ !contains(github.event.head_commit.message, '{skip_release}') }}
      uses: actions/upload-artifact@v4
      with:
        name: resource-pack-artifact
        path: ${{ env.ZIP_NAME }}
        
    - name: Generate SHA1 Checksum
      run: |
        echo CHECKSUM="$(shasum ${{ env.ZIP_NAME }} | awk '{ print $1 }')" >> "$GITHUB_ENV"

    - name: Create Release
      if: ${{ !contains(github.event.head_commit.message, '{skip_release}') }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RESOURCE_ZIPPER }}
      with:
        tag_name: release-${{ env.BRANCH_NAME }}-${{ github.sha }}
        release_name: Release [${{ env.BRANCH_NAME }}] ${{ github.sha }}
        draft: false
        prerelease: false

    - name: Upload Release Artifact
      if: ${{ !contains(github.event.head_commit.message, '{skip_release}') }}
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RESOURCE_ZIPPER }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/${{ env.ZIP_NAME }}
        asset_name: ${{ env.ZIP_NAME }}
        asset_content_type: application/zip

    - name: Prepare and clean commit message
      id: prepare_commit_message
      run: |
        RAW_COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
        
        TAGS=$(echo "$RAW_COMMIT_MESSAGE" | grep -oE '\{[^}]+\}' | tr -d '{}' | awk '{tags = tags $0", "} END {sub(", $", "", tags); print tags}')
        if [ -n "$TAGS" ]; then
          COMMIT_FOOTER="\\n\`Tags: $TAGS\`"
        else
          COMMIT_FOOTER=""
        fi
        
        # Clean the commit message by removing all tags
        COMMIT_MESSAGE=$(echo "$RAW_COMMIT_MESSAGE" | sed -E 's/\{[^}]+\}//g' | sed 's/%0A/\\n/g' | jq -s -Rr @json)
        COMMIT_MESSAGE=${COMMIT_MESSAGE:1:-1}
        
        echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
        echo "COMMIT_FOOTER=$COMMIT_FOOTER" >> $GITHUB_ENV

    - name: Discord Message
      if: ${{ !contains(github.event.head_commit.message, '{skip_discord}') && !contains(github.event.head_commit.message, '{skip_release}') }}
      uses: satak/webrequest-action@master
      with:
        url: ${{ secrets.DISCORD_WEBHOOK }}
        method: POST
        payload: '{ "embeds": [{ "title": "[${{ github.repository }}:${{ env.BRANCH_NAME }}] - new commit\nNew Resource Pack Release", "author": {"name": "${{ github.event.head_commit.author.name}}","url": "https://github.com/${{ github.event.head_commit.author.username}}","icon_url": "https://github.com/${{ github.event.head_commit.author.username}}.png"},"description": "`Commit Message:` ```\n${{ env.COMMIT_MESSAGE }}```${{ env.COMMIT_FOOTER }}\nGithub changelog: [here](https://github.com/${{ github.repository }}/commit/${{ github.sha }})\nLink to this resource pack: [here](https://github.com/${{ github.repository }}/releases/download/release-${{ env.BRANCH_NAME }}-${{ github.sha }}/${{ env.ZIP_NAME }})\nRelease ID: release-${{ env.BRANCH_NAME }}-${{ github.sha }}\nSHA1: ${{env.CHECKSUM}}", "url": "https://github.com/${{ github.repository }}/releases/tag/release-${{ env.BRANCH_NAME }}-${{ github.sha }}", "color": 3384627 }] }'
